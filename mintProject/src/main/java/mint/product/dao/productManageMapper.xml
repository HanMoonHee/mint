<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="productManageSQL">
	<!-- 상품등록 -->
	<insert id="productWrite" parameterType="product">
		insert into product 
		values (seq_product.nextval
				,#{mainCategory}
				,#{subCategory}
				,#{supplierCode}
				,#{stock}
				,#{mainSubject}
				,#{subSubject}
				,#{thumbnail}
				,#{price}
				,#{unit}
				,#{weight}
				,#{packageType}
				,#{information}
				,#{description}
				,#{productImage}
				,#{details}
				,#{productStatus}
				,0
				,#{discountRate})
	</insert>
		 
	<!-- 상품 리스트 조회 -->
	<select id="getProductList" parameterType="java.util.Map" resultType="product"> 
 		select *
 		  from (
 		       select rownum rn
 		            , tt.*
 		         from (    
 		              select * 
  	                    from product
                       where 
 		<if test="mainCategory!=null">
	   		                 mainCategory = #{mainCategory}
        </if>
        <if test="subCategory!=null">
	                         subCategory = #{subCategory}
        </if>
		<!-- 신상품 : 1   인기상품순 : 2    낮은 가격순 : 3   높은 가격순 : 4 -->
 		<choose>
 	    	<when test="selectGubun==null||selectGubun==1">
 	                    order by productCode desc
 		    </when>
 	        <when test="selectGubun==2">
 		                order by STAR desc
 	   		</when>	
 	   		<when test="selectGubun==3">
	                   order by price
	 		</when>
		 	<otherwise>
		               order by price desc
		 	</otherwise>
 	    </choose>
 	    	           ) tt
 	    	    )
 	     where rn between #{startNum} and #{endNum}           	
	</select>
	
	<!-- 조건별 상품리스트 갯수 조회 -->
	<select id="getCntProductList" parameterType="java.util.Map" resultType="Integer">
 		select count(*) cnt 
  	      from product
         where 
 		<if test="mainCategory!=null">
	   		   mainCategory = #{mainCategory}
        </if>
        <if test="subCategory!=null">
	           subCategory = #{subCategory}
        </if>
		<!-- 신상품 : 1   별점순 : 2    낮은 가격순 : 3   높은 가격순 : 4 -->
 		<choose>
 	    	<when test="selectGubun==null||selectGubun==1">
 	     order by productCode desc
 		    </when>
 	        <when test="selectGubun==2">
 		 order by STAR desc
 	   		</when>	
 	   		<when test="selectGubun==3">
	     order by price
	 		</when>
		 	<otherwise>
		 order by price desc
		 	</otherwise>
 	    </choose>
	</select>
	
	<!-- Header 상품리스트 -->
	<select id="getHeaderProductList" parameterType="java.util.Map" resultType="product">
		select *
		  from (
		       select rownum rn
		            , tt.*
		         from (   
                      select *
		              from product
		<!-- 신상품 : 1  베스트 : 2   알뜰 쇼핑 : 3   -->
 		<choose>
 	    	<when test="headGubun==1">
 	                  order by productCode desc
 		    </when>
 	        <when test="headGubun==2">
 		              order by STAR desc
 	   		</when>	
 	   		<when test="headGubun==3">
	                  where DISCOUNTRATE >= 10 
	                  order by price
	 		</when>
 	    </choose>
 	                  ) tt
 	           )       
 	     where rn between #{startNum} and #{endNum}
 	     <choose>
 	     	<when test="selectGubun==1">
 	      order by productCode desc		
 	     	</when>
 	     	<when test="selectGubun==2">
 	      order by STAR desc
 	     	</when>
 	     	<when test="selectGubun==3">
 	      order by price	
 	     	</when>
 	     	<when test="selectGubun==4">
 	      order by price desc	
 	     	</when>
 	     
 	     </choose>                
	</select>
	
	<!-- 상품 1개 정보 조회 -->
	<select id="getProductInfo" parameterType="java.util.Map" resultType="product">
		select *
		  from product
		 where productCode = #{productCode}
	</select>
	
	<!-- 상품 상세 뷰 페이지 아래 같은 subCategory 상품 10개  최신순으로 불러오기 -->
	<select id="getSameSubcategoryProductList" parameterType="java.util.Map" resultType="product">
		<![CDATA[
			select * 
		      from product
		     where subCategory = #{subCategory}
               and rownum <=10 
		     order by productCode desc
		]]>
	</select>
	
	<!-- 전체 매출 -->
	<select id="getSalesData" resultType="java.util.Map">
		select sum(fprice) as sales, (to_date(to_char(oi.logtime,'YYYYMMDD'),'YYYYMMDD') - to_date('19700101','YYYYMMDD')) * (1*24*60*60*1000) as logtime
		from   orderInfo oi
		group  by (to_date(to_char(oi.logtime,'YYYYMMDD'),'YYYYMMDD') - to_date('19700101','YYYYMMDD')) * (1*24*60*60*1000)
		order  by logtime
	</select>
	<!-- 오늘 판매량 순위 -->
	<select id="getProductData" resultType="java.util.Map">
		select sum(qty) as count, mainSubject 
		  from orderDetails
		  join product 
		 using (productCode)
		  join orderInfo 
		 using (orderNumber)
		 where to_char(logtime,'yyyy-MM-DD') = to_char(sysdate,'yyyy-MM-DD')
		 group by mainSubject
		 order by count desc
	</select>
	<!-- 이번 달 카테고리별 판매율 -->
	<select id="getCategoryData" resultType="java.util.Map">
		select sum(qty) as count
		     , mainCategory
		  from orderInfo
		  join orderDetails
		 using (orderNumber)
		  join product 
		 using (productCode)
		 where logtime like to_char(sysdate,'yy/MM/')||'%%'
		 group by mainCategory
		 order by mainCategory
	</select>
	<!-- 전체검색 -->
	<select id="productSearch" parameterType="String" resultType="product">
		select * from product where mainSubject like '%'||'${sword}'||'%'
	</select>
	
	<!-- 관리자 상품리스트 조회 -->
	<select id="getProductAdminList" parameterType="java.util.Map" resultType="product">
		select * 
		  from (
		       select rownum rn
		            , tt.*
		        from (    
		             select *
		               from product
		               <if test="searchOption==null">
		                  <choose>
						     <when test="categorySelect==0">
					  where maincategory = 101	
						      </when>
						      <when test="categorySelect==1">
					  where maincategory = 102	
						      </when>
						      <when test="categorySelect==2">
					  where maincategory = 103	
						      </when>
						      <when test="categorySelect==3">
					  where maincategory = 104	
						      </when>
						      <when test="categorySelect==4">
					  where maincategory = 105	
						      </when>
						      <when test="categorySelect==9">
						      </when>
					      </choose>	
		               </if>
		               <if test="searchOption==1">
		              where productcode like '%'||#{keyword}||'%' 
		               </if>
		               <if test="searchOption==2">
		              where mainsubject like '%'||#{keyword}||'%'  
		               </if>
		             ) tt
		       )
		 where rn between #{startNum} and #{endNum}
		 order by  productCode desc 
	</select>
	
	<!-- 관리자 상품리스트 총 갯수 구하기 -->
	<select id="getCntProductAdminList" parameterType="java.util.Map" resultType="Integer">
        select count(*) cnt
          from product
        <if test="searchOption==null">
        	<choose>
				<when test="categorySelect==0">
		  where maincategory = 101	
			    </when>
			    <when test="categorySelect==1">
		  where maincategory = 102	
			    </when>
			    <when test="categorySelect==2">
		  where maincategory = 103	
			    </when>
			    <when test="categorySelect==3">
		  where maincategory = 104	
			    </when>
			    <when test="categorySelect==4">
		  where maincategory = 105	
			    </when>
			    <when test="categorySelect==9">
			    </when>
		    </choose>	
         </if>
         <if test="searchOption==1"> 
        where productcode like '%'||#{keyword}||'%' 
         </if>
         <if test="searchOption==2">
        where mainsubject like '%'||#{keyword}||'%'  
         </if>  
	</select>
	
	<!-- 관리자 상품 수정 -->
	<update id="productUpdate" parameterType="product">
		update product 
		   set mainCategory = #{mainCategory}
		     , subCategory = #{subCategory}
			 , supplierCode = #{supplierCode} 	
		     , stock = #{stock} 
			 , mainSubject = #{mainSubject}
			 , subSubject = #{subSubject}
			 <if test="thumbnail!=null">
			 , thumbnail = #{thumbnail}
			 </if>
			 , price = #{price}
			 , unit = #{unit}
			 , weight = #{weight}
			 , packageType = #{packageType}
			 , information = #{information}
			 , description = #{description}
			 <if test="productImage!=null">
			 , productImage = #{productImage}
			 </if>
			 , details = #{details}
			 , productStatus= #{productStatus}
			 , star = #{star}
			 , discountRate = #{discountRate}
		 where productcode = #{productCode} 	 
	</update>
	
	<!-- 메인에서 -->
	<select id="getProductListMain" parameterType="int" resultType="product">
		
		select * from
		(select rownum rn, temp.* from 
			(select productcode, subCategory, mainSubject, thumbnail, stock, price, discountRate from product 
			<if test="number == 0">
			order by productcode desc) temp)
			</if>
			<if test="number == 1">
			order by stock desc) temp)
			</if>
			<if test="number == 2">
			<![CDATA[
			where discountRate >= 10) temp)
			]]>
			</if>
			<![CDATA[
			where stock > 0 and rn between 1 and 10
			]]>
	</select>
	
	<!-- 상품 수정한 물품이 재입고 알림 테이블에 있는지 확인 -->
	<select id="getProductAlarmCnt" parameterType="Integer" resultType="Integer">
		select count(*) cnt
		  from stockalarm
		 where productcode = #{productCode} 
	</select>
	
	<!-- 그 상품이 재고가 0에서 추가했는지 확인 -->
	<select id="getProductStockCnt" parameterType="Integer" resultType="Integer">
		select stock
		  from product
		 where productcode = #{productCode} 
	</select>
	
	<!-- 알람 리스트 조회 -->
	<select id="getProductAlarmList" parameterType="Integer" resultType="stock">
		select productcode
             , WAITLISTEMAIL
             , MAINSUBJECT
          from product
         inner join stockalarm
         using (productcode)
		 where productcode = #{productCode}  
	</select>
	
	<!-- 재입고 알람 중복 방지 -->
	<select id="getSameAlarmCnt" parameterType="java.util.Map" resultType="Integer">
		select count(*) cnt
		  from stockalarm
		 where PRODUCTCODE = #{productCode}
		   and WAITLISTEMAIL = #{memEmail} 
	</select>
	
	<!-- 재입고 알람후 삭제 -->
	<delete id="StockAlarmDelete" parameterType="Integer">
		delete from
		       stockalarm
		 where PRODUCTCODE = #{productCode}       
	</delete>
	
	<!-- 재입고 알림 추가 -->
	<insert id="addStockAlarm" parameterType="java.util.Map">
		insert 
		  into stockalarm
		values (
		       #{productCode}	
		     , #{memEmail}
		       )
	</insert>
</mapper>

