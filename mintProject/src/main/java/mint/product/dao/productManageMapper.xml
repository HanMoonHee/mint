<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="productManageSQL">
	<!-- 상품등록 -->
	<insert id="productWrite" parameterType="product">
		insert into product values(seq_product.nextval,#{mainCategory},#{subCategory},#{supplierId},#{stock},#{mainSubject},#{subSubject},#{thumbnail},#{price},#{unit},#{weight},#{packageType},#{information},#{description},#{productImage},#{details},#{productStatus},0,#{discountRate})
	</insert>
	
	<!-- 상품 리스트 조회 -->
	<!-- <select id="getProductList" parameterType="java.util.Map" resultType="product">
		select * 
		  from product
		 where 
		 <if test="mainCategory!=null">
			   mainCategory = #{mainCategory}
		 </if>
		 <if test="subCategory!=null">
			   subCategory = #{subCategory}
		 </if>
		 신상품 : 1   인기상품순 : 2    낮은 가격순 : 3   높은 가격순 : 4
		 <choose>
		 	<when test="selectGubun==null||selectGubun==1">
		 		order by productCode desc
		 	</when>
		 	<when test="selectGubun==2">
		 		order by RECOMMEND desc
		 	</when>
		 	<when test="selectGubun==3">
		 		order by price
		 	</when>
		 	<otherwise>
		 		order by price desc
		 	</otherwise>
		 </choose> -->
		 
		<!-- 상품 리스트 조회 -->
		<select id="getProductList" parameterType="java.util.Map" resultType="product"> 
		 <choose>
		 	<when test="selectGubun==3||selectGubun==4">
		 		select PRODUCTCODE         
                     , MAINCATEGORY                 
				     , SUBCATEGORY                    
				     , SUPPLIERID           
				     , STOCK                       
				     , MAINSUBJECT            
				     , SUBSUBJECT            
				     , THUMBNAIL
				     , case when DISCOUNTRATE != 0 or DISCOUNTRATE is not null then price - (price * (discountRate * (1/100)))  
				            else price    
				       end as price
				     , UNIT                 
				     , WEIGHT               
				     , PACKAGETYPE        
				     , INFORMATION            
				     , DESCRIPTION           
				     , PRODUCTIMAGE        
				     , DETAILS           
				     , PRODUCTSTATUS        
				     , RECOMMEND                  
				     , DISCOUNTRATE 
				  from product
				 where 
		 	 	<if test="mainCategory!=null">
					   mainCategory = #{mainCategory}
				</if>
				<if test="subCategory!=null">
					   subCategory = #{subCategory}
				</if>	
		 		<!-- 신상품 : 1   인기상품순 : 2    낮은 가격순 : 3   높은 가격순 : 4 -->
				<choose>
					<when test="selectGubun==3">
			     order by price
			 		</when>
				 	<otherwise>
				 order by price desc
				 	</otherwise>
			 	</choose>
		 	</when>
		 	<otherwise>
		 		select * 
		  	      from product
		         where 
		 		<if test="mainCategory!=null">
			   		   mainCategory = #{mainCategory}
		        </if>
		        <if test="subCategory!=null">
			           subCategory = #{subCategory}
		        </if>
				<!-- 신상품 : 1   인기상품순 : 2    낮은 가격순 : 3   높은 가격순 : 4 -->
		 		<choose>
		 	    	<when test="selectGubun==null||selectGubun==1">
		 	     order by productCode desc
		 		    </when>
		 	        <when test="selectGubun==2">
		 		 order by RECOMMEND desc
		 	   		</when>	
		 	    </choose>
		 	</otherwise>
		 </choose>
	</select>
	
	<!-- 매출 -->
	<select id="getSalesData" resultType="java.util.Map">
	<!-- select price, qty, to_char(logtime,'YYYY-MM-DD') as logtime from orderandsales where status=3 -->
		select sum(price*qty) as sales, to_char(logtime,'YYYY-MM-DD') as logtime from orderandsales where status=3 group by to_char(logtime,'YYYY-MM-DD') order by logtime
	</select>
	<select id="getProductData" resultType="java.util.Map">
		select count(*) as count, mainSubject from orderandsales 
		join product using(productCode)
		where status=3 
		group by mainSubject
		order by count desc
	</select>
</mapper>

