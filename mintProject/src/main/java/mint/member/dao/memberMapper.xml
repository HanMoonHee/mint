<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="memberSQL">
	<insert id="writeMember" parameterType="member">
		insert into member(name, id, pwd, email, tel, addr1, addr2, gender, birthday, point, isAgreedSMS, memLevel, logtime) 
		values (#{name}, #{id}, #{pwd}, #{email}, #{tel}, #{addr1}, #{addr2}, #{gender}, 
								#{birthday}, #{point}, #{isAgreedSMS}, #{memLevel}, sysdate)
	</insert>

	<select id="getUserBy" parameterType="java.util.Map" resultType="member">
		select * from member where ${key} = #{value}
	</select>
	
	<!-- 출석체크 -->
	<select id="isAttExist" parameterType="String" resultType="String">
		select attDate from member where id=#{id}
	</select>	
	
	<update id="insertAttendance" parameterType="String">
		update member set attDate=sysdate,point=point+100 where id=#{id}
	</update>
	
	<update id="updateAttendance" parameterType="String">
		update member set attDate=concat(attDate, ','||sysdate),point=point+100 where id=#{id}
	</update>
	
	<select id="getAttDates" parameterType="String" resultType="String">
		select attDate from member where id=#{id}
	</select>
	
	<!-- 아이디/비밀번호 찾기 -->
	<select id="findUserBy" parameterType="java.util.Map" resultType="String"> 
		select id from member where 
		<foreach collection="key" index="i" separator="and">
			${key[i]} = '${value[i]}'
		</foreach>
	</select>
	
	<update id="updateInfo" parameterType="java.util.Map">
		update member set pwd = #{pwd} where id = #{id}
	</update>
	
	<!-- 개인정보 수정 -->
	<update id="modifyMember" parameterType="member">
		update member set name = #{name}, tel = #{tel}, email = #{email}, gender = #{gender}, birthday = #{birthday}
		<if test="pwd != null">, pwd = #{pwd}</if>
		where id = #{id}
	</update>
	
	<delete id="deleteMember">
		delete from member where id = #{id}
	</delete>
	
	<!-- 판매자 ================================================================================================================ -->
	<insert id="writeSupplier" parameterType="supplier">
		insert into supplier values (#{supplierCode}, #{supplierId}, #{category}, #{tel}, #{addr1}, #{addr2}, #{description}, #{status}, sysdate)
	</insert>
	
	<select id="getSupplierBy" parameterType="java.util.Map" resultType="supplier">
		select * from supplier where ${key} = #{value}
	</select>
	
	<select id="getList" parameterType="java.util.Map" resultType="java.util.Map">
		select * from ${table} order by ${orderbyValue} 
		<if test="orderbyValue == 'supplierId' || orderbyValue == 'id'">
		asc </if>
		<if test="orderbyValue != 'supplierId' || orderbyValue != 'id'">
		desc </if>
	</select>
</mapper>