<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="orderSQL">

	<!-- 주문자정보 -->
	<select id="getUserData" parameterType="java.util.Map" resultType="member">
		select * from member where id=#{id}
	</select>
	
	<!-- 수량수정 -->
	<update id="updateCartCount" parameterType="java.util.Map">
		update cart set ctCount=#{ctCount} where productCode=#{productCode} and id=#{id}
	</update>
	
	<!-- 카트 및 주문상품정보 가져오기  -->
	<select id="getProductCartData" parameterType="java.util.Map" resultType="java.util.Map">
		select productCode, thumbNail, mainSubject, price, ctCount, discountRate from product
		join cart using(productCode)
		join member using(id) where id=#{id} and productCode=#{productCode}
	</select>
	
	<!-- [회원] 주문내역 ================================================================================================================ -->
	<select id="getMyOrderInfo" parameterType="String" resultType="java.util.Map">
		select orderNumber, to_char(logtime,'yyyy-MM-dd') as logtime, status from orderInfo 
		where id = #{id}
		<if test="from != null">
		and logtime between to_date(#{from}, 'YYMMDDHH') and to_date(#{to}, 'YYMMDDHH') + 0.99999 
		</if>
	</select>
	<select id="getMyOrderDetails" parameterType="String" resultType="java.util.Map">
		select id, productCode, mainSubject, thumbnail, qty, qty*price as orgprice, qty*price*discountRate/100 as dcprice ,qty*(price-price*discountRate/100) as price 
		from   orderDetails 
		join   product using (productCode)
        join   orderInfo using (orderNumber)
        where  orderNumber = ${ordernumber}
	</select>
	
	<!-- [관리자] 주문내역 보기 -->
	<select id="getOrderList" parameterType="java.util.Map" resultType="orderInfo">
		select orderNumber, id, to_char(logtime, 'YY/MM/DD') as logtime, status from orderInfo  
		<if test="status != 5">
			where status = #{status}
		</if>
		order by status asc, id asc
	</select>
	
	<select id="getOrderListByDate" parameterType="java.util.Map" resultType="orderInfo">
		select orderNumber, id, to_char(logtime, 'YY/MM/DD') as logtime, status from orderInfo  
		where  logtime between to_date(#{from}, 'YYMMDD') and to_date(#{to}, 'YYMMDD') + 0.99999
		<if test="status != 5">
			and status = #{status}
		</if>
		order by status asc, id asc
	</select>
	
	<select id="getOrderView" parameterType="java.util.Map" resultType="java.util.Map">
		select id, tel, email, addr1, addr2, to_char(logtime, 'YY/MM/DD') as logtime, productcode, thumbnail, mainsubject, price, qty, discountRate from orderDetails
		left join orderInfo using (ordernumber)
		left join product using (productcode)
		where id = #{id} and orderNumber = #{orderNumber}
	</select>
	
	<update id="updateOrderStatus" parameterType="java.util.Map">
		update orderInfo set status = status + 1 where orderNumber = #{orderNumber}
	</update>
	
	<!-- <insert id="insertOrderDetail" parameterType="java.util.Map">
		insert into orderdetails values (
		    seq_order.nextval,
		    #{name},
		    #{qty}
		)
	</insert>
	
	<insert id="insertOrderDetail" parameterType="java.util.Map">
		insert into orderdetails values (
		    seq_order.nextval,
		    #{productCode},
		    #{qty}
		)
	</insert> -->
	
</mapper>