<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="eventSQL">
	
	<!-- 이벤트 등록 -->
	<insert id="eventWrite" parameterType="java.util.Map">
		<if test='isPeriodOn == 1'>
			insert into event values(SEQ_EVENT.nextval
									,#{eventDTO.subject}
									,#{eventDTO.startDate}
									,#{eventDTO.endDate}
									,sysdate
									,#{eventDTO.productCode}
									,#{eventDTO.eventStatus}
									,#{eventDTO.discountRate}
									,#{eventDTO.prevDiscountRate}
									,#{eventDTO.eventThumbnail})
		</if>
		<if test='isPeriodOn == 0'>
			insert into event(seq,subject,logtime,productcode,discountrate,prevdiscountrate,eventthumbnail,eventstatus)
						 values(SEQ_EVENT.nextval
						 		,#{eventDTO.subject}
						 		,sysdate
						 		,#{eventDTO.productCode}
						 		,#{eventDTO.discountRate}
						 		,#{eventDTO.prevDiscountRate}
						 		,#{eventDTO.eventThumbnail}
						 		,#{eventDTO.eventStatus})
		</if>
	</insert>
	
	<!-- 이벤트 리스트 가져오기 -->
	<select id="getEventList" resultType="event">
		select * from event order by eventStatus desc, subject, startDate
	</select>

	<!-- 이벤트 정보 가져오기 -->
	<select id="getEvent" parameterType="Integer" resultType="event">
		select * from event where seq=#{seq}
	</select>
	
	<!-- 상품 리스트 가져오기 -->
	<select id="getProductList" parameterType="java.util.Map" resultType="product">
		select * from
			 (select rownum rn, tt.* from
				 (select * from product
					<where>
						<if test="searchOption==null">
							<if test="categorySelect != 9">
					  	mainCategory = #{categorySelect}
					  	</if>
						</if>
						<if test="searchOption==1">
			              and productCode like '%'||#{keyword}||'%' 
						</if>
						<if test="searchOption==2">
			              and mainSubject like '%'||#{keyword}||'%'  
						</if>
						<if test="searchOption==3">
			              and supplierCode like '%'||#{keyword}||'%'  
						</if>
					</where>
				)
			tt)
		where rn &gt;= #{startNum} and rn &lt;= #{endNum}
	</select>
	
	<!-- 상품 총 개수 구하기 -->
	<select id="getTotalProduct" parameterType="java.util.Map" resultType="Integer">
		select count(*) from product
		<where>
			<if test="searchOption==null">
				<if test="categorySelect != 9">
					mainCategory = #{categorySelect}
				</if>
			</if>
			<if test="searchOption==1">
				and productCode like '%'||#{keyword}||'%'
			</if>
			<if test="searchOption==2">
				and mainSubject like '%'||#{keyword}||'%'
			</if>
			<if test="searchOption==3">
				and supplierCode like '%'||#{keyword}||'%'
			</if>
		</where>
	</select>

	<!-- 이벤트 수정 -->
	<update id="eventModify" parameterType="java.util.Map">
			update event set subject=#{eventDTO.subject}
			<if test='isPeriodOn == 1'>
				, startDate=#{eventDTO.startDate}
				, endDate=#{eventDTO.endDate}
			</if>
			<if test='isPeriodOn == 0'>
				, startDate=null
				, endDate=null
			</if>
				, logtime=sysdate
				, productCode=#{eventDTO.productCode}
				, discountRate=#{eventDTO.discountRate}
				, prevDiscountRate=#{eventDTO.prevDiscountRate}
				, eventStatus=#{eventDTO.eventStatus}
				<if test="eventThumbnail != null">
				, eventthumbnail=#{eventDTO.eventThumbnail}
				</if>
			where seq=#{eventDTO.seq}
	</update>
	
	<!-- 이벤트 삭제 -->
	<delete id="eventDelete" parameterType="java.util.Map">
		delete event where seq in 
		<foreach collection="array" item="seq" index="i" open="(" separator="," close=")">
			#{seq}
		</foreach>
	</delete>
	
	<!-- 이벤트 검색 -->
	<select id="eventSearch" parameterType="java.util.Map" resultType="event">
	 	select * from event 
	 	<where>
		 	<if test='eventStatus != 9'>
			 	eventStatus = #{eventStatus}
		 	</if>
		 	<if test='subject != ""'>
		 		and subject like '%'||#{subject}||'%'
		 	</if>
		 	<if test='startDate != ""'>
		 		and startDate &gt;= to_date(#{startDate},'yyyy-MM-dd')
		 	</if>
		 	<if test='endDate != ""'>
		 		and endDate &lt;= to_date(#{endDate},'yyyy-MM-dd')
		 	</if>
	 	</where>
	</select>
	

	<!-- 이벤트 상품 가져오기 -->
	<select id="getEventProductList" parameterType="java.util.Map" resultType="product">
		select * from product where productCode in
		<foreach collection="array" item="productCode" index="i" open="(" separator="," close=")">
			#{productCode}
		</foreach>
	</select>
	
	<!-- 이벤트 상품 할인율 수정 (이벤트 실행) -->
	<update id="eventProductUpdate" parameterType="java.util.Map">
		update product 
		set discountRate = #{discountRate} 
		where productCode = #{productCode}
	</update>
	
	<!-- 이벤트 상품 할인율 수정 (이벤트 종료) -->
	<update id="eventEndProductUpdate" parameterType="java.util.Map">
		begin
			update product 
			set discountRate = #{prevDiscountRate} 
			where productCode = #{productCode};
		
			update event 
			set eventStatus = 0 
			where seq = #{seq};
		end;
	</update>
	
	
	<!-- Event테이블 event seq로 productcode prevdiscountrate, discountrate 예쁘게 가져오기 -->
	<select id="getEventProduct" parameterType="int" resultType="java.util.Map">
		 <![CDATA[
		with eventproducttable as
			(select productcode
				  , discountrate
				  , prevdiscountrate 
			 from event 
			 where seq=${seq})
		select trim(regexp_substr(productcode, '[^,]+', 1, level)) as "productCode"
			  ,trim(regexp_substr(discountrate, '[^,]+', 1, level)) as "discountRate"
			  ,trim(regexp_substr(prevdiscountrate, '[^,]+', 1, level)) as "prevDiscountRate"
		from eventproducttable
		connect by level <= regexp_count(discountrate, ',') + 1
		]]>
	</select>
	
	<!-- 메인 화면 이벤트 노출 -->
	<select id="getEventListMain" resultType="event">
		select * from
			(select rownum rn, temp.* from 
				(select seq, subject, eventThumbnail from event where eventStatus = 1 order by startDate)
			 temp)
		<![CDATA[
		where rn between 1 and 3
		]]>
	</select>
	
</mapper>